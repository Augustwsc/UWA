1. 值传递和引用传递
public static void wrongSwap(int a,int b) {
        int t = a;
        a = b;
        b = t;
    }
public static void swap(int a,int b,int[] arr) {
    int t = arr[a];
    arr[a] = arr[b];
    arr[b] = t;
}
调用wrongSwap()方法时，将数组arr其中的两个元素值作为实参传递给了方法的形参 ，
这时内存的栈区创建了两个新的变量存储传递过来的值，方法中的操作实际是对这两个变量值的交换，
并没有对main方法中的原数组进行操作。
而swap（）方法则是把main方法中的原数组引用传递过来，注意传递的是引用，而不是值，不是对象，同时把要交换的两元素下标值传递过来。
然后通过引用交换数组对象两下标上的值，实现数组元素的位置互换

1.形参和实参： 
形参：定义在方法（函数）上的参数，用来接收传递过来的实参值。 
实参：出现在调用方中，可以是常量、变量、表达式和函数，但是必须被赋值。 
形参在函数调用完之后在内存中被释放，形参可以接收基本数据类型值和引用：
接收值时只是将原变量值复制，而引用则是将引用值（对象在内存中的虚拟首地址）传递过来，可以实现对对象的操作。

2.基本数据类型和引用类型： 
基本数据类型是对一些固定存储结构数据类型的定义，是固定长度的；
引用类型包括类和对象、数组、接口，引用类型较复杂，方法中创建一个引用时，此时在栈区分配了一个4byte的空间，
但是还没有创建数据，当使用new运算或反射等方法创建对象时，此时就在堆区开辟空间创建数据，然后将该对象在堆内存中的虚拟首地址值赋给引用。
